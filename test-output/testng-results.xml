<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="3" ignored="0" total="6" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-25T15:46:00 IST" name="Sanity-Test-Suite" finished-at="2022-11-25T15:46:12 IST" duration-ms="12008">
    <groups>
      <group name="DemoGroup">
        <method signature="DemoTests.ATest2()[pri:1, instance:demo.advanced.tests.DemoTests@60099951]" name="ATest2" class="demo.advanced.tests.DemoTests"/>
        <method signature="DemoTests.BTest3()[pri:2, instance:demo.advanced.tests.DemoTests@60099951]" name="BTest3" class="demo.advanced.tests.DemoTests"/>
        <method signature="DemoTests.ZTest1(java.lang.String)[pri:3, instance:demo.advanced.tests.DemoTests@60099951]" name="ZTest1" class="demo.advanced.tests.DemoTests"/>
      </group> <!-- DemoGroup -->
    </groups>
    <test started-at="2022-11-25T15:46:00 IST" name="DemoTest" finished-at="2022-11-25T15:46:12 IST" duration-ms="12008">
      <class name="demo.advanced.tests.DemoTests">
        <test-method is-config="true" signature="BeforeSuite()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:00 IST" name="BeforeSuite" finished-at="2022-11-25T15:46:00 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method is-config="true" signature="BeforeTest()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:00 IST" name="BeforeTest" finished-at="2022-11-25T15:46:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:00 IST" name="BeforeClass" finished-at="2022-11-25T15:46:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:00 IST" name="BeforeMethod" finished-at="2022-11-25T15:46:07 IST" duration-ms="6815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:00 IST" name="BeforeMethod" finished-at="2022-11-25T15:46:07 IST" duration-ms="6844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:00 IST" name="BeforeMethod" finished-at="2022-11-25T15:46:07 IST" duration-ms="6752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="ZTest1(java.lang.String)[pri:3, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:07 IST" name="ZTest1" finished-at="2022-11-25T15:46:07 IST" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Value of data from Parameter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ZTest1 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:07 IST" name="AfterMethod" finished-at="2022-11-25T15:46:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="BTest3()[pri:2, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:07 IST" name="BTest3" finished-at="2022-11-25T15:46:07 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BTest3 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:07 IST" name="AfterMethod" finished-at="2022-11-25T15:46:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method retried="true" signature="ATest2()[pri:1, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:07 IST" name="ATest2" finished-at="2022-11-25T15:46:07 IST" duration-ms="6" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at demo.advanced.tests.DemoTests.ATest2(DemoTests.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ATest2 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:07 IST" name="AfterMethod" finished-at="2022-11-25T15:46:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:07 IST" name="BeforeMethod" finished-at="2022-11-25T15:46:08 IST" duration-ms="1332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method retried="true" signature="ATest2()[pri:1, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:08 IST" name="ATest2" finished-at="2022-11-25T15:46:08 IST" duration-ms="3" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at demo.advanced.tests.DemoTests.ATest2(DemoTests.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ATest2 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:08 IST" name="AfterMethod" finished-at="2022-11-25T15:46:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:08 IST" name="BeforeMethod" finished-at="2022-11-25T15:46:10 IST" duration-ms="1989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method retried="true" signature="ATest2()[pri:1, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:10 IST" name="ATest2" finished-at="2022-11-25T15:46:10 IST" duration-ms="1" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at demo.advanced.tests.DemoTests.ATest2(DemoTests.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ATest2 -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:10 IST" name="BeforeMethod" finished-at="2022-11-25T15:46:12 IST" duration-ms="1742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:10 IST" name="AfterMethod" finished-at="2022-11-25T15:46:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="ATest2()[pri:1, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:12 IST" name="ATest2" finished-at="2022-11-25T15:46:12 IST" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at demo.advanced.tests.DemoTests.ATest2(DemoTests.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ATest2 -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:12 IST" name="AfterMethod" finished-at="2022-11-25T15:46:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:12 IST" name="AfterClass" finished-at="2022-11-25T15:46:12 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="AfterTest()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:12 IST" name="AfterTest" finished-at="2022-11-25T15:46:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method is-config="true" signature="AfterSuite()[pri:0, instance:demo.advanced.tests.DemoTests@60099951]" started-at="2022-11-25T15:46:12 IST" name="AfterSuite" finished-at="2022-11-25T15:46:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- demo.advanced.tests.DemoTests -->
    </test> <!-- DemoTest -->
  </suite> <!-- Sanity-Test-Suite -->
</testng-results>
